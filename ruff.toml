# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 79
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
  "A",    #flake8-builtins
  "AIR",    #Airflow
  "ANN",    #flake8-annotations
  "ARG",    #flake8-unused-arguments
  "ASYNC",    #flake8-async
  "B",    #flake8-bugbear
  "BLE",    #flake8-blind-except
  "C4",    #flake8-comprehensions
  "C90",    #mccabe
  "COM",    #flake8-commas
  "CPY",    #flake8-copyright
  "D",   # pydocstyle
  "DJ",    #flake8-django
  "DTZ",    #flake8-datetimez
  "E",   # pycodestyle
  "W",    #pycodestyle
  "EM",    #flake8-errmsg
  "ERA",    #eradicate
  "EXE",    #flake8-executable
  "F",   # pyflakes
  "FA",    #flake8-future-annotations
  "FBT",    #flake8-boolean-trap
  "FIX",    #flake8-fixme
  "FLY",    #flynt
  "FURB",    #refurb
  "G",    #flake8-logging-format
  "I",    #isort
  "ICN",    #flake8-import-conventions
  "INP",    #flake8-no-pep420
  "INT",    #flake8-gettext
  "ISC",    #flake8-implicit-str-concat
  "N",    #pep8-naming
  "NPY",    #NumPy-specific rules
  "PD",    #pandas-vet
  "PERF",    #Perflint
  "PGH",    #pygrep-hooks
  "PIE",    #flake8-pie
  "PL",    #Pylint
  "PT",    #flake8-pytest-style
  "PTH",    #flake8-use-pathlib
  "PYI",    #flake8-pyi
  "Q",    #flake8-quotes
  "RET",    #flake8-return
  "RSE",    #flake8-raise
  "RUF",    #Ruff-specific rules
  "S",    #flake8-bandit
  "SIM",    #flake8-simplify
  "SLF",    #flake8-self
  "SLOT",    #flake8-slots
  "T10",    #flake8-debugger
  "T20",    #flake8-print
  "TCH",    #flake8-type-checking
  "TD",    #flake8-todos
  "TID",    #flake8-tidy-imports
  "TRY",    #tryceratops
  "UP",  # pyupgrade
  "YTT",    #flake8-2020
]
ignore = ["INP001", "CPY001"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = ["B"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[lint.flake8-quotes]
# Don't bother trying to avoid escapes.
avoid-escape = false
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"
