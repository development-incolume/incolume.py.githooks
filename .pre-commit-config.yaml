# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

default_install_hook_types: [pre-commit]

repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v6.0.0
  hooks:
    - id: check-added-large-files
    - id: check-ast
    - id: check-case-conflict
    - id: check-docstring-first
    - id: check-illegal-windows-names
    - id: check-json
    - id: check-toml
    - id: check-xml
    - id: check-yaml
    - id: detect-private-key
      exclude: '^.*detect_private_key.*$'  # Exclude files that were matched by files.
    - id: double-quote-string-fixer
    - id: end-of-file-fixer
    - id: forbid-new-submodules
    - id: forbid-submodules
    - id: name-tests-test
    - id: no-commit-to-branch
    - id: pretty-format-json
    - id: trailing-whitespace

- repo: https://github.com/astral-sh/ruff-pre-commit
  # Ruff version.
  rev: v0.13.0
  hooks:
    # Run the linter.
    - id: ruff-check
      args: [--config, ruff.toml, --fix ]
    # Run the formatter.
    - id: ruff-format
      args: [--config, ruff.toml]

# - repo: https://github.com/development-incolume/incolume.py.githooks
#   rev: 1.7.0
#   hooks:
#     - id: check-len-first-line
#     #  args: [--nonexequi]
#     - id: check-precommit-installed
#     #  args: [--nonexequi]
#     - id: check-valid-filenames
#       # args: ['--min-len=3', '--max-len=256', '--nonexequi']
#     - id: detect-key
#     #  args: [--nonexequi]
#     - id: effort-message
#     #  args: [--nonexequi]
#     - id: footer-signed-off-by
#     #  args: [--nonexequi]


- repo: local
  hooks:
    - id: check-len-first-line
      name: Incolume - check length of first line in commit message
      description: Guarantees that the first line of the commit message does not exceed a specified length.
      entry: check-len-first-line
      language: python
      stages: [prepare-commit-msg, manual]
      args: []

    - id: check-precommit-installed
      name: Incolume - check if pre-commit is installed
      description: Guarantees pre-commit instalation for project.
      entry: is-precommit-installed
      language: python
      types: [python]
      stages: [pre-commit, pre-push, manual]
      args: []

    - id: check-valid-branchname
      name: Incolume - check if is valid branchnames
      description: Guarantees valid branchname for project.
      entry: is-valid-branchname
      language: python
      stages: [pre-commit, pre-push, manual]
      args: []

    - id: check-valid-filenames
      name: Incolume - check if is valid filenames
      description: Guarantees valid filenames for Python.
      entry: is-valid-filename
      language: python
      additional_dependencies: [icecream,rich]  # Python dependency for the script
      types: [python]
      stages: [pre-commit, pre-push, manual]
      args: []

    - id: clean-commit-message
      name: Incolume - Clean Commit message
      entry: clean-commit-msg
      language: python  # script requires the Python interpreter
    #   require_serial: false  # don't run in parallel
    #   additional_dependencies: []  # Python dependency for the script
    #   # files: ^*$  # this catches all .ipynb under examples/
    #   types: [python]  # jupyter is alias for .ipynb files
      stages: [prepare-commit-msg, manual]  # this hook is run at commit time
      args: []
      verbose: false

    - id: detect-key
      verbose: false
      name: Incolume - detect private key
      description: detects the presence of private keys.
      entry: detect-key
      language: python
      types: [text]
      files: ''  # The pattern of files to run on.
      exclude: '^.*detect_private_key.*$'  # Exclude files that were matched by files.
      args: []

    - id: effort-message
      name: Incolume - Commit Message Effort Hook
      language: python
      entry: effort-msg
      additional_dependencies: [colorama,rich]  # Python dependency for the script
      always_run: true
      stages: [post-commit, manual]  # this hook is run at commit time
      args: []

    - id: footer-signed-off-by
      name: Incolume - Seting footer with Signed-off-by
      entry: set-footer-signed-off-by  # script is called from root directory
      language: python  # script requires the Python interpreter
    #   require_serial: true  # don't run in parallel because one call of the script parses all files
      additional_dependencies: []  # Python dependency for the script
    #   files: ^examples/.*\.ipynb$  # this catches all .ipynb under examples/
      # types: []  # jupyter is alias for .ipynb files
      stages: [prepare-commit-msg, manual]  # this hook is run at commit time
      args: []
      verbose: true

    - id: insert-diff-commit
      name: Incolume - Insert Git Diff into Commit Message
      entry: insert-diff-commit
      language: python  # script requires the Python interpreter
      additional_dependencies: []  # Python dependency for the script
      stages: [commit-msg, manual]  # this hook is run at commit time
      args: []
      verbose: false

    - id: validate-message-commit
      name: Incolume - validate message Commit agree with Conventional Commits
      entry: is-valid-msg-commit  # script is called from root directory
      language: python  # script requires the Python interpreter
      require_serial: false  # don't run in parallel
      additional_dependencies: [colorama,rich]  # Python dependency for the script
      # files: ^*$  # this catches all .ipynb under examples/
      types_or: [system-verilog]  #
      stages: [prepare-commit-msg, pre-commit, commit-msg]  # this hook is run at commit time
      args: []
